const CACHE_VERSION=1,CURRENT_CACHE="main-1",cacheFiles=["models/PieceObject.js","fonts/BungeeShade-Regular.ttf","images/big_tent_logo.svg","images/Square.svg","images/Triangle.svg","images/Infinity.svg","images/Hexagon.svg","images/Circle.svg","helpers/vue.min.js","helpers/console-enhancer.js","styles/likeme.css","scripts/likeme.js","index.html"];self.addEventListener("activate",(e=>e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if("main-1"!==e)return caches.delete(e)})))))))),self.addEventListener("install",(e=>e.waitUntil(caches.open("main-1").then((e=>e.addAll(cacheFiles))))));const fromNetwork=(e,t)=>new Promise(((s,a)=>{const n=setTimeout(a,t);fetch(e).then((t=>{clearTimeout(n),s(t),update(e)}),a)})),fromCache=e=>caches.open("main-1").then((t=>t.match(e).then((e=>e||t.match("/offline/"))))),update=e=>caches.open("main-1").then((t=>fetch(e).then((s=>t.put(e,s)))));self.addEventListener("fetch",(e=>{var t,s;e.respondWith((t=e.request,s=1e4,new Promise(((e,a)=>{const n=setTimeout(a,s);fetch(t).then((s=>{clearTimeout(n),e(s),update(t)}),a)}))).catch((()=>fromCache(e.request)))),e.waitUntil(update(e.request))}));